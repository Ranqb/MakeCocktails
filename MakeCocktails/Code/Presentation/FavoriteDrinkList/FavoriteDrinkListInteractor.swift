//
//  FavoriteDrinkListInteractor.swift
//  MakeCocktails
//
//  Created by Andrey Nedov on 16/06/2019.
//  Copyright (c) 2019 Andrey Nedov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoriteDrinkListBusinessLogic
{
    func fetchDrinks(request: FavoriteDrinkList.FetchDrinks.Request)
    func selectDrink(request: FavoriteDrinkList.SelectDrink.Request)
    func removeDrink(request: FavoriteDrinkList.RemoveDrink.Request)
}

protocol FavoriteDrinkListDataStore
{
    var drinkID: String? {get set}
}

class FavoriteDrinkListInteractor: FavoriteDrinkListBusinessLogic, FavoriteDrinkListDataStore
{
    var drinkID: String?
    
    var presenter: FavoriteDrinkListPresentationLogic?
    private var dataBaseWorker: FavoriteDrinkListWorker = FavoriteDrinkListWorker(service: DataBaseService())
    
    func fetchDrinks(request: FavoriteDrinkList.FetchDrinks.Request) {
        dataBaseWorker.getDrinks { (result) in
            let response = FavoriteDrinkList.FetchDrinks.Response(result: result)
            self.presenter?.presentDrinks(response: response)
        }
    }
    
    func selectDrink(request: FavoriteDrinkList.SelectDrink.Request) {
        drinkID = request.drinkID
    }
    func removeDrink(request: FavoriteDrinkList.RemoveDrink.Request){
        dataBaseWorker.removeDrink(by: request.drinkId) { (result) in
            let response = FavoriteDrinkList.RemoveDrink.Response(result: result)
            self.presenter?.presentRemoveDrink(response: response)
        }
    }
}
